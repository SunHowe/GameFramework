//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Threading;
using UnityGameFramework.Runtime;
using UnityGameFramework.Runtime.FairyGUI;

namespace GameLogic.UI.Login
{
    [FGUICustomComponent(URL)]
    public partial class LoginComp : FairyGUI.GComponent, IFGUICustomComponent, IFeatureContainerOwner
    {
        public const string URL = "ui://6apezyp2hjkq1";

        #region [子节点]
 
        public FairyGUI.GButton ServerButton;
  
        public FairyGUI.GButton LoginButton;
 
        #endregion

        #region [控制器]

        #endregion

        #region [动效]

        #endregion

        #region [FeatureContainer]
        
        /// <summary>
        /// 默认功能容器。指向FeatureContainerOnAddedToStage。
        /// </summary>
        public FeatureContainer FeatureContainer => FeatureContainerOnAddedToStage;
        
        /// <summary>
        /// 功能容器。在组件销毁时会跟着被销毁。
        /// </summary>
        public FeatureContainer FeatureContainerOnInit => m_FeatureContainerOnInit ??= new FeatureContainer(this);
        
        /// <summary>
        /// 功能容器。在组件从舞台移除时会跟着被销毁。
        /// </summary>
        public FeatureContainer FeatureContainerOnAddedToStage => m_FeatureContainerOnAddedToStage ??= new FeatureContainer(this);
        
        private FeatureContainer m_FeatureContainerOnInit;
        private FeatureContainer m_FeatureContainerOnAddedToStage;

        #endregion
        
        public override void ConstructFromXML(FairyGUI.Utils.XML xml)
        {
            base.ConstructFromXML(xml);

            #region [子节点]
 
            ServerButton = (FairyGUI.GButton)GetChild("serverButton");
  
            LoginButton = (FairyGUI.GButton)GetChild("loginButton");
 
            #endregion

            #region [控制器]

            #endregion

            #region [动效]

            #endregion

            #region [生命周期事件]

            this.onAddedToStage.Add(_OnAddedToStage);
            this.onRemovedFromStage.Add(_OnRemoveFromStage);

            #endregion

            m_FeatureContainerOnInit?.Awake();
            OnInitialize();
        }

        public override void Dispose()
        {
            OnDispose();
            
            m_FeatureContainerOnInit?.Shutdown();
            base.Dispose();
        }
        
        #region [生命周期]
        
        private void _OnAddedToStage()
        {
            m_FeatureContainerOnAddedToStage?.Awake();
            OnAddedToStage();
        }
        
        private void _OnRemoveFromStage()
        {
            OnRemoveFromStage();
            m_FeatureContainerOnAddedToStage?.Shutdown();
        }
        
        partial void OnAddedToStage();
        partial void OnRemoveFromStage();
        
        #endregion
    }
}